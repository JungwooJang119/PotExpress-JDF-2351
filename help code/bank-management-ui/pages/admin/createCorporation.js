import Head from "next/head";
import React, { useState } from "react";
import Image from "next/image";
import styles from "../../styles/Home.module.css";
import { url } from "../../lib/env";
import Link from "next/link";
import { Grid, Paper, TextField, Button, Typography } from "@mui/material";

export default function createCorporation() {
  const [corpID, setCorpID] = useState("");
  const [longName, setLongName] = useState("");
  const [shortName, setShortName] = useState("");
  const [resAssets, setResAssets] = useState(0);

  const handleCreate = async () => {

    if (resAssets < 0) {
      console.log("negative")
      alert("Res Assets Cannot be Less than 0")
      return;
    }

    const rawResponse = await fetch(url + "/api/createCorporation", {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        corpID: corpID,
        longName: longName,
        shortName: shortName,
        resAssets: resAssets,
      }),
    });

    const response = await rawResponse.json();
    if (rawResponse.status === 400) {
      alert(response.sqlMessage);
    } else if (rawResponse.status === 200) {
      alert("Success");
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bank Management UI</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Grid container spacing={1}>
        <Grid item xs={12}>
          <h1 className={styles.title}>Create Corporation</h1>
        </Grid>

        <Grid item xs={2} />
        <Grid item xs={4}>
          <TextField
            required
            label="Corporation ID"
            fullWidth
            value={corpID}
            onChange={(e) => setCorpID(e.target.value)}
          />
        </Grid>
        <Grid item xs={4}>
          <TextField
            label="Long Name"
            fullWidth
            value={longName}
            onChange={(e) => setLongName(e.target.value)}
          />
        </Grid>
        <Grid item xs={2} />
        <Grid item xs={2} />
        <Grid item xs={4}>
          <TextField
            label="Short Name"
            fullWidth
            value={shortName}
            onChange={(e) => setShortName(e.target.value)}
          />
        </Grid>
        <Grid item xs={4}>
          <TextField
            label="Reserved Assets"
            fullWidth
            type="number"
            value={resAssets}
            onChange={(e) => setResAssets(e.target.value)}
          />
        </Grid>
        <Grid item xs={2} />
        <Grid item xs={2} />
        <Grid item xs={4}>
          <Link href="/admin/adminMenu">
            <Button variant="contained" color="error" fullWidth>
              Cancel
            </Button>
          </Link>
        </Grid>
        <Grid item xs={4}>
          <Button variant="contained" fullWidth onClick={handleCreate}>
            Create
          </Button>
        </Grid>
        <Grid item xs={2} />
      </Grid>
    </div>
  );
}
