import Head from "next/head";
import styles from "../styles/Home.module.css";
import { url } from "../lib/env";
import { Button, TextField } from "@mui/material";
import { useState, useContext } from "react";
import AppContext from "../AppContext";
import Link from "next/link";

const Login = () => {
  const { userData, setUserData } = useContext(AppContext);
  const [userIDInput, setUserIDInput] = useState("");
  const [password, setPassword] = useState("");

  const handleSignIn = async (userID, password) => {
    try {
      const rawResponse = await fetch(url + "/api/login", {
        method: "POST",
        headers: {
          Accept: "application/json",
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ userID: userID, password: password }),
      });
      const response = await rawResponse.json();
      if (response && response.length > 0) {
        let userObj = { userID: response[0].perID, userRole: response[0].role };
        setUserData(userObj);
      } else {
        alert("Login Unsuccessful");
      }
    } catch (err) {
      console.log(err);
    }
  };

  const handleSignOut = () => {
    let userObj = { userID: "", userRole: "" };
    setUserData(userObj);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bank Management UI Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {userData.userRole === "" && (
          <>
            <h2 className={styles.title}>Login</h2>

            <h2>User ID: </h2>
            <TextField
              value={userIDInput}
              onChange={(e) => setUserIDInput(e.target.value)}
              style={{ width: 500 }}
            ></TextField>

            <h2>Password: </h2>
            <TextField
              type={"password"}
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              style={{ width: 500 }}
            ></TextField>

            <Button
              variant="contained"
              style={{ width: 500, marginTop: 50, padding: 20 }}
              onClick={() => handleSignIn(userIDInput, password)}
            >
              Login
            </Button>
          </>
        )}

        {userData.userRole !== "" && (
          <h2 className={styles.title}>Welcome {userData.userID}!</h2>
        )}

        {userData.userRole === "a" && (
          <>
            <Link href={"/admin/adminMenu"}>
              <a className={styles.card}>
                <h2>Login as Admin &rarr;</h2>
              </a>
            </Link>
          </>
        )}

        {(userData.userRole === "e" || userData.userRole === "e&c") && (
          <>
            <Link href={"/manager/managerMenu"}>
              <a className={styles.card}>
                <h2>Login as Manager &rarr;</h2>
              </a>
            </Link>
          </>
        )}

        {(userData.userRole === "c" || userData.userRole === "e&c") && (
          <>
            <Link href={"/customer/customerMenu"}>
              <a className={styles.card}>
                <h2>Login as Customer &rarr;</h2>
              </a>
            </Link>
          </>
        )}

        {userData.userRole !== "" && (
          <Button fullWidth variant="contained" onClick={handleSignOut}>
            Sign Out
          </Button>
        )}
      </main>
    </div>
  );
};

export default Login;
